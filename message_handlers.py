import re
import gen_embedded_reply
import asyncio


async def game_message(ctx, channel):
    message = ctx.content.split()
    try:
        for i in message:
            i.replace('<', '').replace('!', '').replace('@', '').replace('?', '').replace('>', '').replace(',', '')

        if re.search(r"^[–ö–∫]—É—Å—å\b", message[0]) and re.search(r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.bite(ctx, message))

        if re.search(r"^[–ö–∫]—Ç–æ\b", message[0]) and re.search(r"^[–Ø—è]\b", message[1]):
            await channel.send(embed=await gen_embedded_reply.who_am_i(ctx))

        if re.search(r"^[–®—à]–∏–ø–ø–µ—Ä–∏—Ç—å\b", message[0]) and re.search(r"[\d]{18}", message[1]) and re.search(
                r"[\d]{18}", message[2]):
            await channel.send(embed=await gen_embedded_reply.shipper(message))
        if re.search(r"^[–û–æ]–±–Ω—è—Ç—å\b", message[0]) and re.search(r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.hug(ctx, message))

        if re.search(r"^[–ü–ø]–æ–∫–æ—Ä–º–∏—Ç—å\b", message[0]) and re.search(r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.feed(ctx, message))

        if (re.search(r"^[–ü–ø]–æ—Ü–µ–ª–æ–≤–∞—Ç—å\b", message[0]) or re.search(r"^[–ó–∑]–∞—Å–æ—Å–∞—Ç—å\b", message[0]) or
                re.search(r"^[–¶—Ü]–µ–ª–æ–≤–∞—Ç—å\b", message[0])) and re.search(r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.kiss(ctx, message))

        if (re.search(r"^[–õ–ª]—é–±–∏—Ç—å\b", message[0]) or re.search(r"^[–õ–ª]—é–±–ª—é\b", message[0])) and \
                re.search(r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.love(ctx, message))

        if re.search(r"^[–£—É]–¥–∞—Ä–∏—Ç—å\b", message[0]) and re.search(r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.hit(ctx, message))

        if (re.search(r"^[–®—à]–ª[–µ—ë]–ø\b", message[0]) or re.search(r"^[–®—à]–ª[–µ—ë]–ø–Ω—É—Ç—å\b", message[0])) and re.search(
                r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.slap(ctx, message))

        if (re.search(r"^[–¢—Ç]—ã–∫\b", message[0]) or re.search(r"^[–¢—Ç]—ã–∫–Ω—É—Ç—å\b", message[0])) and re.search(
                r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.poke(ctx, message))

        if re.search(r"^[–í–≤]–∑—è—Ç—å\b", message[0]) and re.search(r"–∑–∞", message[1]) and re.search(
                r"—Ä—É–∫—É", message[2]) and re.search(r"[\d]{18}", message[3]):
            await channel.send(embed=await gen_embedded_reply.take_hand(ctx, message))

        if (re.search(r"^[–ì–≥]–ª–∞–¥–∏—Ç—å\b", message[0]) or re.search(r"^[–ü–ø]–æ–≥–ª–∞–¥–∏—Ç—å\b", message[0])) and re.search(
                r"[\d]{18}", message[1]):
            await channel.send(embed=await gen_embedded_reply.stroke(ctx, message))

        if re.search(r"^[–ì–≥]—Ä—É—Å—Ç—å\b", message[0]) or re.search(r"^[–ü–ø]–µ—á–∞–ª—å\b", message[0]):
            await channel.send(embed=await gen_embedded_reply.sad(ctx))

        if re.search(r"^[–ë–±]—Ä–∞–∫\b", message[0]) and re.search(r"[\d]{18}", message[1]):
            marry_message = await channel.send(embed=await gen_embedded_reply.marriage(ctx, message))
            print(marry_message)
            print(marry_message.id)
            await marry_message.add_reaction('‚úÖ')
            await marry_message.add_reaction('‚ùé')
            try:
                member = None
                members = marry_message.guild.members
                message[1] = message[1].replace('<', '').replace('!', '').replace('@', '').replace('?', '').replace('>',
                                                                                                                    '').replace(
                    ',', '')
                for i in members:
                    print(i, i.id, message[1])
                    if i.id == int(message[1]):
                        member = i
                        print('\n!!!\n', member, '\n')
                print(member)
                if await marry_message.reaction_add('‚úÖ', member, timeout=60.0):
                    await channel.send('–ø–æ–ª—É—á–∏–ª–æ—Å—å')
            except asyncio.TimeoutError:
                await channel.send('üëé')

    except IndexError:
        pass  # –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –∫–æ–º–∞–Ω–¥–∞
