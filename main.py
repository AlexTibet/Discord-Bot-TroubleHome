import asyncio
import discord
import datetime
import re
import websockets

from datastorage import SqliteDataStorage
import message_handlers
import gen_embedded_reply
import server_info

import config


class MyClient(discord.Client):
    """
    –ö–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π Discord
    """
    async def on_ready(self):
        """
        –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
        (–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –±–æ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å)
        """
        print(f'Logged on as {self.user}!')
        for i in range(len(self.guilds)):
            print(f"Bot run on server '{self.guilds[i].name}' with serverID = {self.guilds[i].id},"
                  f" with {self.guilds[i].member_count} users")
        print("Connecting to database...")
        sql_db = SqliteDataStorage(config.db_name)
        print("Connection to the database is complete.")
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await self.database_filling(sql_db)
        await self.starting_online_check()
        print("Run online activity check")

    async def on_message(self, ctx: discord.Message):
        """
        –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ª—é–±—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –ª—é–±–æ–π –∫–∞–Ω–∞–ª.
        –°–º–æ—Ç—Ä–∏–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö, –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
        –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–æ–º–∞–Ω–¥
        """
        await message_handlers.message_logging(ctx)

        channel = discord.Client.get_channel(self, ctx.channel.id)
        await message_handlers.moderators_message(ctx, channel)

        if channel.id in config.ADMIN_CHANNEL:
            await message_handlers.admin_message(ctx, channel)

        if channel.id in config.GAME_CHANNEL:
            await message_handlers.game_message(ctx, channel, self)

        if channel.id in config.ADMIN_CHANNEL or channel.id in config.GAME_CHANNEL:
            await message_handlers.user_info_message(ctx, channel, self)

        if channel.id == config.TEST_SERVER_CONFIG_CHANNEL or channel.id == config.SERVER_CONFIG_CHANNEL:
            await message_handlers.server_config_message(ctx, channel)

        if channel.id in config.DINO_CHANNEL:  # —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ The Isle
            await message_handlers.dino_from_the_isle_message(ctx, channel)

    async def on_member_join(self, member: discord.Member):
        """
        –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–µ
        –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "—Ç–≤–∏–Ω–∫"
        –ï—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –º–µ–Ω–µ–µ 1 –¥–Ω—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω—ë–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        """
        join_time = datetime.datetime.now()
        ban_time = datetime.timedelta(days=1)
        if ban_time > join_time - member.created_at:
            channel = discord.Client.get_channel(self, config.ADMIN_CHANNEL[1])
            emb = await gen_embedded_reply.user_info(member)
            await channel.send(f'<@{member.id}> *—ç—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–∏–π –∞–∫–∫ –∫–æ—Ç–æ—Ä–æ–º—É –º–µ–Ω–µ–µ —Å—É—Ç–æ–∫*\n'
                               f'*–≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ* üçå ', embed=emb)

    async def on_raw_message_delete(self, payload: discord.RawMessageDeleteEvent):
        """
        –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª—é–±–æ–º –∫–∞–Ω–∞–ª–µ –∫ –∫–æ—Ç–æ—Ä–æ–º—É —É –±–æ—Ç–∞ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
        –î–ª—è —á–∞—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∑–∞–ø—Ä–µ—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        –£–¥–∞–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ
        """
        if payload.channel_id in config.ADMIN_CHANNEL:
            channel = discord.Client.get_channel(self, payload.channel_id)
            await channel.send(f"`–ê –Ω–∏—á–µ–≥–æ —Ç—ã —Ç—É—Ç –Ω–µ —É–¥–∞–ª–∏—à—å!`\n–≠—Ç–æ <#{payload.channel_id}>!!!\n"
                               f"**{payload.cached_message.author}** –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
                               f"{payload.cached_message.content}")
            for emb in payload.cached_message.embeds:
                await channel.send(embed=emb)
            for attach in payload.cached_message.attachments:
                await channel.send(attach.url)
                await channel.send(attach.proxy_url)

    # –û–¢–ö–õ–Æ–ß–ï–ù–û, –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π
    # async def on_raw_message_edit(self, payload):
    # """
    # –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª—é–±–æ–º –∫–∞–Ω–∞–ª–µ –∫ –∫–æ—Ç–æ—Ä–æ–º—É —É –±–æ—Ç–∞ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
    # –î–ª—è —á–∞—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∑–∞–ø—Ä–µ—Ç –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ
    # """
    #     if payload.channel_id in config.ADMIN_CHANNEL:
    #         channel = discord.Client.get_channel(self, payload.channel_id)
    #         try:
    #             author = payload.cached_message.author
    #         except AttributeError:
    #             author = ''
    #         await channel.send(f"`–ê –Ω–∏—á–µ–≥–æ —Ç—ã —Ç—É—Ç –Ω–µ –∏—Å–ø—Ä–∞–≤–∏—à—å –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫!`\n–≠—Ç–æ <#{payload.channel_id}>!!!\n\n"
    #                            f"**{author}** `–æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:`\n\n"
    #                            f"{payload.cached_message.content}")
    #         await channel.send(f"\n`–ò –∏—Å–ø—Ä–∞–≤–∏–ª —Ç–∞–∫:`\n{payload.data['content']}")

    @staticmethod
    async def starting_online_check():
        """
        –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ-–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç–∞—Ç—É—Å–∞
        –ü—Ä–∏–º–µ—Ä: (–ò–≥—Ä–∞–µ—Ç –≤ 96 –∏–∑ 100)
        –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ö–æ—Å—Ç, –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–º –æ–Ω–ª–∞–π–Ω–µ
        –í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
        """
        while True:
            try:
                online = await server_info.bermuda_server_info()
                await client.online_activity(online)
                await asyncio.sleep(30)
            except Exception as error:
                print(error)
                await asyncio.sleep(30)
                continue

    @staticmethod
    async def online_activity(info: dict):
        """
        –í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–º –æ–Ω–ª–∞–π–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞
        info: —Å–ª–æ–≤–∞—Ä—å —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º –≤–∏–¥–∞ info = {'players': {'active': 96, 'total': 100 }}'
        —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç–µ–∫—É—â–µ–º –æ–Ω–ª–∞–π–Ω–µ
        """
        try:
            online = f"{info['players']['active']} –∏–∑ {info['players']['total']}"
        except TypeError:
            online = "–û—Ñ—Ñ–ª–∞–π–Ω"
        game = discord.Game(online)
        try:
            await client.change_presence(status=discord.Status.online, activity=game)
        except websockets.exceptions.ConnectionClosedOK:
            game = discord.Game("–û–±–Ω–æ–≤–ª—è—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
            await client.change_presence(status=discord.Status.online, activity=game)

    async def database_filling(self, sql_db: SqliteDataStorage):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        """
        for guild in self.guilds:  # –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
            # —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã –±—Ä–∞–∫–æ–≤ (–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ "–±—Ä–∞–∫–∞—Ö" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
            sql_db.create_marriage_tabel(guild.name.strip().replace(' ', '_'))  # –Ω–µ–ª—å–∑—è —á—Ç–æ–±—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –±—ã–ª –ø—Ä–æ–±–µ–ª
            table = None
            if re.search(config.BoB_server_name, guild.name):
                table = "BoB_Users"
            if re.search(config.TheIsle_server_name, guild.name):
                table = "TheIsle_Users"
            if table is not None:
                for member in guild.members:  # –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
                    member_status = False
                    accounts = sql_db.get_accounts(table)
                    for account in accounts:
                        if account["discord_id"] == member.id:
                            print(f"{member} —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–¢–∞–±–ª–∏—Ü–∞: {table} ID:{member.id})")
                            member_status = True
                            break
                    if member_status is not True and table is not None:
                        sql_db.create_account(table, member.id)
                        print(f"{member} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–¢–∞–±–ª–∏—Ü–∞: {table} —Å ID:{member.id}")
                continue


# RUN
client = MyClient()
client.run(config.TOKEN)
